======================================推　荐　系　统========================================
1.User-User 算法:计算用户之间的相似度
	UserA			物品A	

	UserB			物品B

	UserC			物品C

	条件：1.UserA--喜欢--> 物品A
		  2.UserA 与 UserB 相似

	结果: 物品A ---推荐给--> UserB

	优势：

	a 不需要历史数据，没有冷启动问题

　　b 不依赖于物品的属性，因此其他领域的问题都可无缝接入。

　　不足：

　　算法比较粗糙，效果很难令人满意，只适合简单的推荐
---------------------------------------------------------		  

2.Item-Item 算法:计算物品之间的关联
	UserA			物品A	

	UserB			物品B

	UserC			物品C

	条件：1.UserA--喜欢--> 物品A
		  2.物品A　与 物品B 相似

	结果: 物品B ---推荐给--> UserA

	优势：

	　　对用户兴趣可以很好的建模，并通过对物品属性维度的增加，获得更好的推荐精度

　　不足：

　　a 物品的属性有限，很难有效的得到更多数据

　　b 物品相似度的衡量标准只考虑到了物品本身，有一定的片面性

　　c 需要用户的物品的历史数据，有冷启动的问题
---------------------------------------------------------		  
	

3.降维算法：把事物特征一般化
